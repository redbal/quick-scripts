#!/usr/bin/env python3
'''
Quick script to parse WordPress posts into individual files
per post. The files are stored in a pre-defined PATH, entries. 

The default WordPress export includes a 20 line header/template.
Example below:

:<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2022-01-03 17:52"-->

Example above:

Remove these lines before using this script.

This first line should be something like:

<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">


'''

import os
import wpparser

INPUT_FILE="reddhomestead.xml"

def cleanContent(input):
    '''
    Remove WordPress specific tags and <p> tags from content
    Parse image path from img tag
    '''
    ret = ''
    for line in input.split('\n'):
        if '<img src' in line:
            idx = line.find('<img src=')
            edx = line.find(' alt=')
            pre = line[idx:edx].split('com')[1]
            ret += pre.split('?')[0] + '\n'
        if '<p>' in line:
            idx = line.find('<p>') + 3
            edx = line.find('</p>') 
            pre = line[idx:edx]
            ret += pre + '\n'
    return ret

def parseWordPressXML():
    '''
    Read export WordPress posts xml file  and parse the
    post entries with:
     - title
     - post_date
     - image paths
     - content
     - comments
    
    write those values into a file with the filename
    of the post_id number, in a path labeled entries
    '''
    
    data = wpparser.parse(INPUT_FILE)
    
    for entry in data['posts']:
        if entry['post_type'] == 'post':
            print("Processing post entry {}".format(entry['post_id']))
            fp = 'entries/{}.txt'.format(entry['post_id'])
            if not os.path.exists('entries'):
                os.makedirs('entries')
            with open(fp, 'w') as f:
                f.write(entry['title'] + '\n')
                f.write(entry['post_date'] + '\n')
                preppedContent = cleanContent(entry['content'])
                f.write(preppedContent + '\n')
                for comment in entry['comments']:
                    f.write(comment['date'] + '\n')
                    if comment['author'] != None:
                        f.write(comment['author'] + '\n')
                    else:
                        f.write('None' + '\n')
                    if comment['author_email'] != None:
                        f.write(comment['author_email'] + '\n')
                    else:
                        f.write('None' + '\n')
                    f.write(comment['content'] + '\n')

if __name__ == '__main__':
    parseWordPressXML()
